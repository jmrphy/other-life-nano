---
import { type CollectionEntry, getCollection } from "astro:content";
import ContentLayout from "@layouts/ContentLayout.astro";
import FormattedDate from "@components/FormattedDate.astro";
import TableOfContents from "@components/TableOfContents.astro";
import { THEME } from "@consts";


export async function getStaticPaths() {
  const posts = (await getCollection("blog"))
    .filter(post => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.data.slug || post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings } = await post.render();

const hasH2Headings = headings.some(h => h.depth === 2);
---

<ContentLayout title={post.data.title} description={post.data.description}>
  <div class="py-2 min-h-screen relative">
    {/* Desktop TOC positioned absolutely to the page */}
    {hasH2Headings && (
      <aside class="hidden xl:block fixed top-[8rem] left-[calc(50%+30rem)] w-64 z-10">
        <TableOfContents headings={headings} variant="desktop" />
      </aside>
    )}
    
    {/* Mobile TOC - appears at top of content */}
    {hasH2Headings && (
      <div class="xl:hidden mb-8">
        <TableOfContents headings={headings} variant="mobile" />
      </div>
    )}
    
    {/* Main content - same for all cases */}
    <div class={`space-y-10 ${THEME.container.text.default} ${THEME.container.text.desktop} mx-auto`}>
      <div class="space-y-1">
        <h1 class="animate font-semibold text-black dark:text-white text-3xl">
          {post.data.title}
        </h1>
        <div class="animate flex items-center gap-1.5">
          <div class="font-base text-sm">
            <FormattedDate date={post.data.date} />
          </div>
        </div>
      </div>
      <article class="animate prose prose-stone dark:prose-invert text-base sm:text-lg leading-relaxed hyphens-none">
        <Content />
      </article>
    </div>
  </div>
</ContentLayout> 